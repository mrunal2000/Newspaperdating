{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nimport { SUPABASE_CONFIG, isSupabaseConfigured } from '../config/supabase';\nexport const supabase = createClient(SUPABASE_CONFIG.url, SUPABASE_CONFIG.anonKey);\n\n// Database types\n\n// Convert database types to app types\nexport const convertDatabasePostToProfile = (dbPost, comments) => ({\n  id: dbPost.id,\n  name: dbPost.name,\n  age: dbPost.age,\n  title: dbPost.title,\n  location: dbPost.location,\n  description: dbPost.description,\n  image: dbPost.image,\n  interests: dbPost.interests,\n  likes: dbPost.likes || 0,\n  createdAt: new Date(dbPost.created_at),\n  comments: comments.map(comment => ({\n    id: comment.id,\n    text: comment.text,\n    author: comment.author,\n    createdAt: new Date(comment.created_at)\n  }))\n});\n\n// Convert app types to database types\nexport const convertProfileToDatabasePost = profile => ({\n  name: profile.name,\n  age: profile.age,\n  title: profile.title,\n  location: profile.location,\n  description: profile.description,\n  image: profile.image || null,\n  interests: profile.interests || []\n});\n\n// Check if we should use Supabase or fallback to localStorage\nexport const shouldUseSupabase = () => {\n  return isSupabaseConfigured() && typeof window !== 'undefined';\n};","map":{"version":3,"names":["createClient","SUPABASE_CONFIG","isSupabaseConfigured","supabase","url","anonKey","convertDatabasePostToProfile","dbPost","comments","id","name","age","title","location","description","image","interests","likes","createdAt","Date","created_at","map","comment","text","author","convertProfileToDatabasePost","profile","shouldUseSupabase","window"],"sources":["/Users/mrunal/Downloads/Newspaper Dating App/src/services/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport { SUPABASE_CONFIG, isSupabaseConfigured } from '../config/supabase';\n\nexport const supabase = createClient(SUPABASE_CONFIG.url, SUPABASE_CONFIG.anonKey);\n\n// Database types\nexport interface DatabasePost {\n  id: string;\n  name: string;\n  age: number;\n  title: string;\n  location: string;\n  description: string;\n  image?: string;\n  interests: string[];\n  likes: number;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface DatabaseComment {\n  id: string;\n  post_id: string;\n  text: string;\n  author: string;\n  created_at: string;\n}\n\n// Convert database types to app types\nexport const convertDatabasePostToProfile = (dbPost: DatabasePost, comments: DatabaseComment[]) => ({\n  id: dbPost.id,\n  name: dbPost.name,\n  age: dbPost.age,\n  title: dbPost.title,\n  location: dbPost.location,\n  description: dbPost.description,\n  image: dbPost.image,\n  interests: dbPost.interests,\n  likes: dbPost.likes || 0,\n  createdAt: new Date(dbPost.created_at),\n  comments: comments.map(comment => ({\n    id: comment.id,\n    text: comment.text,\n    author: comment.author,\n    createdAt: new Date(comment.created_at)\n  }))\n});\n\n// Convert app types to database types\nexport const convertProfileToDatabasePost = (profile: any) => ({\n  name: profile.name,\n  age: profile.age,\n  title: profile.title,\n  location: profile.location,\n  description: profile.description,\n  image: profile.image || null,\n  interests: profile.interests || []\n});\n\n// Check if we should use Supabase or fallback to localStorage\nexport const shouldUseSupabase = () => {\n  return isSupabaseConfigured() && typeof window !== 'undefined';\n};\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AACpD,SAASC,eAAe,EAAEC,oBAAoB,QAAQ,oBAAoB;AAE1E,OAAO,MAAMC,QAAQ,GAAGH,YAAY,CAACC,eAAe,CAACG,GAAG,EAAEH,eAAe,CAACI,OAAO,CAAC;;AAElF;;AAuBA;AACA,OAAO,MAAMC,4BAA4B,GAAGA,CAACC,MAAoB,EAAEC,QAA2B,MAAM;EAClGC,EAAE,EAAEF,MAAM,CAACE,EAAE;EACbC,IAAI,EAAEH,MAAM,CAACG,IAAI;EACjBC,GAAG,EAAEJ,MAAM,CAACI,GAAG;EACfC,KAAK,EAAEL,MAAM,CAACK,KAAK;EACnBC,QAAQ,EAAEN,MAAM,CAACM,QAAQ;EACzBC,WAAW,EAAEP,MAAM,CAACO,WAAW;EAC/BC,KAAK,EAAER,MAAM,CAACQ,KAAK;EACnBC,SAAS,EAAET,MAAM,CAACS,SAAS;EAC3BC,KAAK,EAAEV,MAAM,CAACU,KAAK,IAAI,CAAC;EACxBC,SAAS,EAAE,IAAIC,IAAI,CAACZ,MAAM,CAACa,UAAU,CAAC;EACtCZ,QAAQ,EAAEA,QAAQ,CAACa,GAAG,CAACC,OAAO,KAAK;IACjCb,EAAE,EAAEa,OAAO,CAACb,EAAE;IACdc,IAAI,EAAED,OAAO,CAACC,IAAI;IAClBC,MAAM,EAAEF,OAAO,CAACE,MAAM;IACtBN,SAAS,EAAE,IAAIC,IAAI,CAACG,OAAO,CAACF,UAAU;EACxC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,4BAA4B,GAAIC,OAAY,KAAM;EAC7DhB,IAAI,EAAEgB,OAAO,CAAChB,IAAI;EAClBC,GAAG,EAAEe,OAAO,CAACf,GAAG;EAChBC,KAAK,EAAEc,OAAO,CAACd,KAAK;EACpBC,QAAQ,EAAEa,OAAO,CAACb,QAAQ;EAC1BC,WAAW,EAAEY,OAAO,CAACZ,WAAW;EAChCC,KAAK,EAAEW,OAAO,CAACX,KAAK,IAAI,IAAI;EAC5BC,SAAS,EAAEU,OAAO,CAACV,SAAS,IAAI;AAClC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;EACrC,OAAOzB,oBAAoB,CAAC,CAAC,IAAI,OAAO0B,MAAM,KAAK,WAAW;AAChE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}