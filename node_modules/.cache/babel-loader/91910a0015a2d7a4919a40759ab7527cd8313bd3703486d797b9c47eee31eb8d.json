{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';import{SUPABASE_CONFIG,isSupabaseConfigured}from'../config/supabase';console.log('🔍 Creating Supabase client with config:',{url:SUPABASE_CONFIG.url,anonKey:SUPABASE_CONFIG.anonKey?\"\".concat(SUPABASE_CONFIG.anonKey.substring(0,20),\"...\"):'undefined'});export const supabase=createClient(SUPABASE_CONFIG.url,SUPABASE_CONFIG.anonKey);console.log('🔍 Supabase client created:',supabase);// Database types\n// Convert database types to app types\nexport const convertDatabasePostToProfile=(dbPost,comments)=>({id:dbPost.id,name:dbPost.name,age:dbPost.age,title:dbPost.title,location:dbPost.location,description:dbPost.description,image:dbPost.image,interests:dbPost.interests,createdAt:new Date(dbPost.created_at),comments:comments.map(comment=>({id:comment.id,text:comment.text,author:comment.author,createdAt:new Date(comment.created_at)}))});// Convert app types to database types\nexport const convertProfileToDatabasePost=profile=>({id:profile.id,// Include the ID field\nname:profile.name,age:profile.age,title:profile.title,location:profile.location,description:profile.description,image:profile.image||null,interests:profile.interests||[]});// Check if we should use Supabase or fallback to localStorage\nexport const shouldUseSupabase=()=>{return isSupabaseConfigured()&&typeof window!=='undefined';};","map":{"version":3,"names":["createClient","SUPABASE_CONFIG","isSupabaseConfigured","console","log","url","anonKey","concat","substring","supabase","convertDatabasePostToProfile","dbPost","comments","id","name","age","title","location","description","image","interests","createdAt","Date","created_at","map","comment","text","author","convertProfileToDatabasePost","profile","shouldUseSupabase","window"],"sources":["/Users/mrunal/Downloads/Newspaper Dating App/src/services/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\nimport { SUPABASE_CONFIG, isSupabaseConfigured } from '../config/supabase';\n\nconsole.log('🔍 Creating Supabase client with config:', {\n  url: SUPABASE_CONFIG.url,\n  anonKey: SUPABASE_CONFIG.anonKey ? `${SUPABASE_CONFIG.anonKey.substring(0, 20)}...` : 'undefined'\n});\n\nexport const supabase = createClient(SUPABASE_CONFIG.url, SUPABASE_CONFIG.anonKey);\n\nconsole.log('🔍 Supabase client created:', supabase);\n\n// Database types\nexport interface DatabasePost {\n  id: string;\n  name: string;\n  age: number;\n  title: string;\n  location: string;\n  description: string;\n  image?: string;\n  interests: string[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface DatabaseComment {\n  id: string;\n  post_id: string;\n  text: string;\n  author: string;\n  created_at: string;\n}\n\n// Convert database types to app types\nexport const convertDatabasePostToProfile = (dbPost: DatabasePost, comments: DatabaseComment[]) => ({\n  id: dbPost.id,\n  name: dbPost.name,\n  age: dbPost.age,\n  title: dbPost.title,\n  location: dbPost.location,\n  description: dbPost.description,\n  image: dbPost.image,\n  interests: dbPost.interests,\n  createdAt: new Date(dbPost.created_at),\n  comments: comments.map(comment => ({\n    id: comment.id,\n    text: comment.text,\n    author: comment.author,\n    createdAt: new Date(comment.created_at)\n  }))\n});\n\n// Convert app types to database types\nexport const convertProfileToDatabasePost = (profile: any) => ({\n  id: profile.id, // Include the ID field\n  name: profile.name,\n  age: profile.age,\n  title: profile.title,\n  location: profile.location,\n  description: profile.description,\n  image: profile.image || null,\n  interests: profile.interests || []\n});\n\n// Check if we should use Supabase or fallback to localStorage\nexport const shouldUseSupabase = () => {\n  return isSupabaseConfigured() && typeof window !== 'undefined';\n};\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,uBAAuB,CACpD,OAASC,eAAe,CAAEC,oBAAoB,KAAQ,oBAAoB,CAE1EC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAE,CACtDC,GAAG,CAAEJ,eAAe,CAACI,GAAG,CACxBC,OAAO,CAAEL,eAAe,CAACK,OAAO,IAAAC,MAAA,CAAMN,eAAe,CAACK,OAAO,CAACE,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,QAAQ,WACxF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,QAAQ,CAAGT,YAAY,CAACC,eAAe,CAACI,GAAG,CAAEJ,eAAe,CAACK,OAAO,CAAC,CAElFH,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEK,QAAQ,CAAC,CAEpD;AAsBA;AACA,MAAO,MAAM,CAAAC,4BAA4B,CAAGA,CAACC,MAAoB,CAAEC,QAA2B,IAAM,CAClGC,EAAE,CAAEF,MAAM,CAACE,EAAE,CACbC,IAAI,CAAEH,MAAM,CAACG,IAAI,CACjBC,GAAG,CAAEJ,MAAM,CAACI,GAAG,CACfC,KAAK,CAAEL,MAAM,CAACK,KAAK,CACnBC,QAAQ,CAAEN,MAAM,CAACM,QAAQ,CACzBC,WAAW,CAAEP,MAAM,CAACO,WAAW,CAC/BC,KAAK,CAAER,MAAM,CAACQ,KAAK,CACnBC,SAAS,CAAET,MAAM,CAACS,SAAS,CAC3BC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAACX,MAAM,CAACY,UAAU,CAAC,CACtCX,QAAQ,CAAEA,QAAQ,CAACY,GAAG,CAACC,OAAO,GAAK,CACjCZ,EAAE,CAAEY,OAAO,CAACZ,EAAE,CACda,IAAI,CAAED,OAAO,CAACC,IAAI,CAClBC,MAAM,CAAEF,OAAO,CAACE,MAAM,CACtBN,SAAS,CAAE,GAAI,CAAAC,IAAI,CAACG,OAAO,CAACF,UAAU,CACxC,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAK,4BAA4B,CAAIC,OAAY,GAAM,CAC7DhB,EAAE,CAAEgB,OAAO,CAAChB,EAAE,CAAE;AAChBC,IAAI,CAAEe,OAAO,CAACf,IAAI,CAClBC,GAAG,CAAEc,OAAO,CAACd,GAAG,CAChBC,KAAK,CAAEa,OAAO,CAACb,KAAK,CACpBC,QAAQ,CAAEY,OAAO,CAACZ,QAAQ,CAC1BC,WAAW,CAAEW,OAAO,CAACX,WAAW,CAChCC,KAAK,CAAEU,OAAO,CAACV,KAAK,EAAI,IAAI,CAC5BC,SAAS,CAAES,OAAO,CAACT,SAAS,EAAI,EAClC,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAU,iBAAiB,CAAGA,CAAA,GAAM,CACrC,MAAO,CAAA5B,oBAAoB,CAAC,CAAC,EAAI,MAAO,CAAA6B,MAAM,GAAK,WAAW,CAChE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}